// # Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// # 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// # By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

void main() async {
  var sumOfEvenTerms = await getFibsUpTo(4000000).reduce((value, element){
    if (element % 2 == 0) return value + element;
    return value;
  });
  
  // By using reduce() the first element 
  // of the Stream/list/iterable is added
  // bcoz the the value variable get its 
  // value from list[0] therefore
  // we have to subtract list[0] value 
  // from the sum, here list[0] = 1
  sumOfEvenTerms -= 1;
  
  print (sumOfEvenTerms);
}

// an asynchronous generator / stream
Stream getFibsUpTo(int limit) async* {
  var a = 1, b = 1;
  while (b <= limit){
    yield b;
    var temp = a + b;
    a = b;
    b = temp; 
  }
}